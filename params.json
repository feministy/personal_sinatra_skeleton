{"name":"Personal sinatra skeleton","tagline":"dbc Sinatra skeleton with some personal tweaks","body":"## dbc Sinatra skeleton\r\n*with some person tweaks!*\r\n\r\nDrop this onto your computer and have an app running in less than 5 minutes. Personal embellishments to the [dbc](http://devbootcamp.com) skeleton listed below. I can't take credit for the core environment, database, rake, or gem set up. \r\n\r\n------\r\n\r\n**TO DO**\r\n\r\n- Error handling\r\n- Refine AJAX to toggle login/signup form\r\n- Cross-browser CSS (currently functioning in Chrome)\r\n\r\n------\r\n\r\n#### Modifications\r\n\r\n- Password fun with [bcrypt](http://bcrypt-ruby.rubyforge.org/)\r\n- [Open Sans](http://www.google.com/fonts/specimen/Open+Sans) as base font, [Bitter](http://www.google.com/fonts/specimen/Bitter) as paragraph font\r\n- JavaScript with AJAX for logging in and signing up users\r\n- Fixed top nav bar that uses partials and helper methods to display info to logged in/out users\r\n- [Sticky footer](http://ryanfait.com/sticky-footer/)\r\n- [Sass](http://sass-lang.com/) for CSS\r\n- [Slim](http://slim-lang.com/) syntax for (most) viewsx\r\n- A few erb files in views/erb\r\n- Pre-wired ```Users``` model and migrations (see **Requirements** below)\r\n\r\n* Pre-wired controller to compile Sass to CSS \r\n - Sass files should be ```*.scss``` and stored in the ```/public/css``` folder\r\n - If you add any new files, include them in the head of ```layout.slim``` \r\n\r\n* Pre-wired controller for ```users``` that includes:\r\n - login GET/POST (view + partial included)\r\n - signup GET/POST (view + partial included)\r\n - logout GET\r\n - user profile GET (empty view included)\r\n\r\n\r\n------\r\n\r\n#### Important stuff\r\n\r\n1. ```bundle```\r\n2. Create necessary migrations (```rake generate:migration NAME=CreateTableNames```) and models (```rake generate:model NAME=Name```)\r\n3. ```rake db:create && rake db:migrate```\r\n4. ```shotgun```\r\n5. Have a blast\r\n\r\n------\r\n\r\n#### Requirements\r\n\r\n- PostgreSQL\r\n- You like AJAX\r\n\r\n* **Users table**. The ```/login``` and ```/signup``` GET/POST routes and views make some assumptions. \r\n - Users login with an email and password (as opposed to username and password)\r\n - ```Users``` includes fields for ```first_name```, ```last_name```, ```email```, and ```password_hash```\r\n - ```email``` and ```password_hash``` are required\r\n - ```email``` must be unique\r\n - ```password_hash``` is passed in through ```params``` with ```password``` processed by bcrypt","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}